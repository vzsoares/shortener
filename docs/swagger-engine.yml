openapi: "3.0.2"
info:
  title: Url Shortener - Engine
  description: Url Shortener Engine
  contact:
    name: Vinicius Zenha <vinicius.zenha@gmail.com>
    email: vinicius.zenha@gmail.com
  version: "1.0"
security:
  - apiKeyB2: []
servers:
  - url: https://api.zenhalab.com/shortener/v1/engine
    description: server
  - url: http:localhost:3000/engine
    description: local server
paths:
  /url:
    post:
      tags:
        - url
      description: Creates or updates existing rash entry
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                rash:
                  $ref: "#/components/schemas/short_url/properties/rash"
                destination:
                  $ref: "#/components/schemas/short_url/properties/destination"
                ttl:
                  $ref: "#/components/schemas/short_url/properties/ttl"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response"

  /url/{rash}:
    get:
      tags:
        - url
      description: get short url entry
      parameters:
        - in: "path"
          name: rash
          example: "a-dasf3@152s"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response"
                properties:
                  data:
                    $ref: "#/components/schemas/short_url"
        "404":
          description: not found
    delete:
      tags:
        - url
      description: deletes existing rash entry
      parameters:
        - in: "path"
          name: rash
          example: "a-dasf3@152s"
          required: true
          schema:
            type: "string"      
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response"

components:
  securitySchemes:
    apiKeyA4:
      description: organization api integration api key A4
      type: "apiKey"
      name: "x-api-key"
      in: "header"
  schemas:
    short_url:
      type: "object"
      required:
        - "destination"
        - "rash"
      properties:
        destination:
          type: "string"
          example: "https://www.destination.com"
        rash:
          type: "string"
          example: "a-51asd34123gg"
        ttl:
          type: "number"
          example: 1725137810
          default: 0
          description: epoch date to expire
        createdAt:
          type: "number"
          description: epoch date
          example: 1725137810
        updatedAt:
          type: "number"
          description: epoch date
          example: 1725137810
        version:
          type: "number"
          description: times changed
          example: 1   
    response:
      type: "object"
      properties:
        data:
          type: "object"
        message:
          type: string
          enum:
            - OK
            - Already created
          example: OK
        code:
          type: string
          enum:
            - S200
            - S409
            - E409
          example: "S200"
